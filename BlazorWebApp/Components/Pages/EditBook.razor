@page "/edit/{id:int}"
@inject IBookRepository Repository
@inject NavigationManager Navigation

<PageTitle>
    Edit Book
</PageTitle>


@if(Books is not null)
{
    <div class="row justify-content-center">
        <div class="col-6">
            <EditForm Enhance="true" method="post" FormName="EditBookForm" OnValidSubmit="EditBookId" Model="Books" autocomplete="off">
                <h3>
                    Edit Book @Id
                </h3>
                <input type="hidden" name="Book.Id" value="@Books.Id"/>
                <div class="mb-3">
                    <label for="title" class="form-label">
                        Title
                    </label>
                    <InputText id="title" @bind-Value="Books.Title" class="form-control shadow-none">
                    </InputText>
                </div>
                <div class="mb-3">
                    <label for="author" class="form-label">
                        Author
                    </label>
                    <InputText id="author" @bind-Value="Books.Author" class="form-control shadow-none">

                    </InputText>
                </div>
                <div class="mb-3">
                    <label for="publication-date" class="form-label">
                        Publication Date
                    </label>
                    <InputDate id="title" @bind-Value="Books.PublicationDate" class="form-control shadow-none">

                    </InputDate>
                </div>
                <div class="mb-3">
                    <label for="category" class="form-label">
                        Category
                    </label>
                    <InputSelect id="category" @bind-Value="Books.Category" class="form-control shadow-none">
                        <option value="0">
                            Select Category
                        </option>
                        @foreach (var category in Enum.GetValues(typeof(Category)))
                        {
                            <option value="@category">
                                @category.ToString()
                            </option>
                        }
                    </InputSelect>
                </div>
                <div class="mb-3">
                    <button class="btn btn-primary shadow-none">
                        Submit
                    </button>
                    <a href="/" class="btn btn-secondary shadow-none ms-3">
                        Back To List
                    </a>
                </div>
                <DataAnnotationsValidator />
                <ValidationSummary />
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    public Book? Books { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Books ??= await Repository.GetBookById(Id);
        Books.Id = Id;
    }

    private async Task EditBookId(){
        if(Books is not null){
            await Repository.UpdateBook(Books);
            Navigation.NavigateTo("/");
        }
    }
}
